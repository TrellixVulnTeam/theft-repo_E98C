{
  "{\"sourceRoot\":\"/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo\",\"filename\":\"/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo\",\"plugins\":[],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo",
      "filename": "/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst fetch = require('node-fetch');\n\nconst app = express();\nconst port = process.env.PORT || 3000;\napp.use(express.urlencoded({\n  extended: true\n}));\napp.use(express.json());\napp.use(express.static('public'));\n\nfunction processDataForFrontEnd(req, res) {\n  const baseURL = 'https://data.princegeorgescountymd.gov/resource/wb4e-w4nf.json'; // Enter the URL for the data you would like to retrieve here\n\n  fetch(baseURL).then(response => {\n    console.log(response);\n    return response;\n  }).then(data => data.json()).then(data => {\n    console.log(data);\n    res.send({\n      data: data\n    });\n  }).catch(err => {\n    console.log(err);\n    res.redirect('/error');\n  });\n} // This is our first route on our server.\n// To access it, we can use a \"GET\" request on the front end\n// by typing in: localhost:3000/api or 127.0.0.1:3000/api\n\n\napp.get('/api', (req, res) => {\n  processDataForFrontEnd(req, res);\n});\napp.listen(port, () => console.log(`Example app listening on port ${port}!`));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImZldGNoIiwiYXBwIiwicG9ydCIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwidXNlIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsInN0YXRpYyIsInByb2Nlc3NEYXRhRm9yRnJvbnRFbmQiLCJyZXEiLCJyZXMiLCJiYXNlVVJMIiwidGhlbiIsInJlc3BvbnNlIiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJzZW5kIiwiY2F0Y2giLCJlcnIiLCJyZWRpcmVjdCIsImdldCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxZQUFELENBQXJCOztBQUVBLE1BQU1FLEdBQUcsR0FBR0gsT0FBTyxFQUFuQjtBQUVBLE1BQU1JLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBakM7QUFFQUosR0FBRyxDQUFDSyxHQUFKLENBQVFSLE9BQU8sQ0FBQ1MsVUFBUixDQUFtQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUFuQixDQUFSO0FBQ0FQLEdBQUcsQ0FBQ0ssR0FBSixDQUFRUixPQUFPLENBQUNXLElBQVIsRUFBUjtBQUVBUixHQUFHLENBQUNLLEdBQUosQ0FBUVIsT0FBTyxDQUFDWSxNQUFSLENBQWUsUUFBZixDQUFSOztBQUlBLFNBQVNDLHNCQUFULENBQWdDQyxHQUFoQyxFQUFxQ0MsR0FBckMsRUFBMEM7QUFDeEMsUUFBTUMsT0FBTyxHQUFHLGdFQUFoQixDQUR3QyxDQUMwQzs7QUFFbEZkLEVBQUFBLEtBQUssQ0FBQ2MsT0FBRCxDQUFMLENBQ0NDLElBREQsQ0FDT0MsUUFBRCxJQUFjO0FBQ2xCQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsUUFBWjtBQUNBLFdBQU9BLFFBQVA7QUFDRCxHQUpELEVBS0NELElBTEQsQ0FLT0ksSUFBRCxJQUFVQSxJQUFJLENBQUNWLElBQUwsRUFMaEIsRUFNT00sSUFOUCxDQU1hSSxJQUFELElBQVU7QUFDZEYsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVo7QUFDQU4sSUFBQUEsR0FBRyxDQUFDTyxJQUFKLENBQVM7QUFBRUQsTUFBQUEsSUFBSSxFQUFFQTtBQUFSLEtBQVQ7QUFDRCxHQVRQLEVBVU9FLEtBVlAsQ0FVY0MsR0FBRCxJQUFTO0FBQ2RMLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSSxHQUFaO0FBQ0FULElBQUFBLEdBQUcsQ0FBQ1UsUUFBSixDQUFhLFFBQWI7QUFDRCxHQWJQO0FBNkJELEMsQ0FFRDtBQUNBO0FBQ0E7OztBQUNBdEIsR0FBRyxDQUFDdUIsR0FBSixDQUFRLE1BQVIsRUFBZ0IsQ0FBQ1osR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFBQ0YsRUFBQUEsc0JBQXNCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixDQUF0QjtBQUFpQyxDQUFoRTtBQUVBWixHQUFHLENBQUN3QixNQUFKLENBQVd2QixJQUFYLEVBQWlCLE1BQU1lLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLGlDQUFnQ2hCLElBQUssR0FBbEQsQ0FBdkIiLCJzb3VyY2VSb290IjoiL1VzZXJzL1phY2svRG9jdW1lbnRzL0dpdEh1Yi96YWNrYXJ5ci5naXRodWIuaW8vdGhlZnQtdGVzdC1yZXBvLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBmZXRjaCA9IHJlcXVpcmUoJ25vZGUtZmV0Y2gnKTtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xuXG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKTtcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKCdwdWJsaWMnKSk7XG5cblxuXG5mdW5jdGlvbiBwcm9jZXNzRGF0YUZvckZyb250RW5kKHJlcSwgcmVzKSB7XG4gIGNvbnN0IGJhc2VVUkwgPSAnaHR0cHM6Ly9kYXRhLnByaW5jZWdlb3JnZXNjb3VudHltZC5nb3YvcmVzb3VyY2Uvd2I0ZS13NG5mLmpzb24nOyAvLyBFbnRlciB0aGUgVVJMIGZvciB0aGUgZGF0YSB5b3Ugd291bGQgbGlrZSB0byByZXRyaWV2ZSBoZXJlXG5cbiAgZmV0Y2goYmFzZVVSTClcbiAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgIHJldHVybiByZXNwb25zZVxuICB9KVxuICAudGhlbigoZGF0YSkgPT4gZGF0YS5qc29uKCkpXG4gICAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgICAgICAgcmVzLnNlbmQoeyBkYXRhOiBkYXRhIH0pOyBcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgIHJlcy5yZWRpcmVjdCgnL2Vycm9yJyk7XG4gICAgICAgIH0pO1xuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxufVxuXG4vLyBUaGlzIGlzIG91ciBmaXJzdCByb3V0ZSBvbiBvdXIgc2VydmVyLlxuLy8gVG8gYWNjZXNzIGl0LCB3ZSBjYW4gdXNlIGEgXCJHRVRcIiByZXF1ZXN0IG9uIHRoZSBmcm9udCBlbmRcbi8vIGJ5IHR5cGluZyBpbjogbG9jYWxob3N0OjMwMDAvYXBpIG9yIDEyNy4wLjAuMTozMDAwL2FwaVxuYXBwLmdldCgnL2FwaScsIChyZXEsIHJlcykgPT4ge3Byb2Nlc3NEYXRhRm9yRnJvbnRFbmQocmVxLCByZXMpfSk7XG5cbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4gY29uc29sZS5sb2coYEV4YW1wbGUgYXBwIGxpc3RlbmluZyBvbiBwb3J0ICR7cG9ydH0hYCkpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "fetch",
        "app",
        "port",
        "process",
        "env",
        "PORT",
        "use",
        "urlencoded",
        "extended",
        "json",
        "static",
        "processDataForFrontEnd",
        "req",
        "res",
        "baseURL",
        "then",
        "response",
        "console",
        "log",
        "data",
        "send",
        "catch",
        "err",
        "redirect",
        "get",
        "listen"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEA,MAAME,GAAG,GAAGH,OAAO,EAAnB;AAEA,MAAMI,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEAJ,GAAG,CAACK,GAAJ,CAAQR,OAAO,CAACS,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACK,GAAJ,CAAQR,OAAO,CAACW,IAAR,EAAR;AAEAR,GAAG,CAACK,GAAJ,CAAQR,OAAO,CAACY,MAAR,CAAe,QAAf,CAAR;;AAIA,SAASC,sBAAT,CAAgCC,GAAhC,EAAqCC,GAArC,EAA0C;AACxC,QAAMC,OAAO,GAAG,gEAAhB,CADwC,CAC0C;;AAElFd,EAAAA,KAAK,CAACc,OAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAOA,QAAP;AACD,GAJD,EAKCD,IALD,CAKOI,IAAD,IAAUA,IAAI,CAACV,IAAL,EALhB,EAMOM,IANP,CAMaI,IAAD,IAAU;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACAN,IAAAA,GAAG,CAACO,IAAJ,CAAS;AAAED,MAAAA,IAAI,EAAEA;AAAR,KAAT;AACD,GATP,EAUOE,KAVP,CAUcC,GAAD,IAAS;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAT,IAAAA,GAAG,CAACU,QAAJ,CAAa,QAAb;AACD,GAbP;AA6BD,C,CAED;AACA;AACA;;;AACAtB,GAAG,CAACuB,GAAJ,CAAQ,MAAR,EAAgB,CAACZ,GAAD,EAAMC,GAAN,KAAc;AAACF,EAAAA,sBAAsB,CAACC,GAAD,EAAMC,GAAN,CAAtB;AAAiC,CAAhE;AAEAZ,GAAG,CAACwB,MAAJ,CAAWvB,IAAX,EAAiB,MAAMe,OAAO,CAACC,GAAR,CAAa,iCAAgChB,IAAK,GAAlD,CAAvB",
      "sourceRoot": "/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo/",
      "sourcesContent": [
        "const express = require('express');\nconst fetch = require('node-fetch');\n\nconst app = express();\n\nconst port = process.env.PORT || 3000;\n\napp.use(express.urlencoded({ extended: true }));\napp.use(express.json());\n\napp.use(express.static('public'));\n\n\n\nfunction processDataForFrontEnd(req, res) {\n  const baseURL = 'https://data.princegeorgescountymd.gov/resource/wb4e-w4nf.json'; // Enter the URL for the data you would like to retrieve here\n\n  fetch(baseURL)\n  .then((response) => {\n    console.log(response);\n    return response\n  })\n  .then((data) => data.json())\n        .then((data) => {\n          console.log(data);\n          res.send({ data: data }); \n        })\n        .catch((err) => {\n          console.log(err);\n          res.redirect('/error');\n        });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n\n// This is our first route on our server.\n// To access it, we can use a \"GET\" request on the front end\n// by typing in: localhost:3000/api or 127.0.0.1:3000/api\napp.get('/api', (req, res) => {processDataForFrontEnd(req, res)});\n\napp.listen(port, () => console.log(`Example app listening on port ${port}!`));"
      ]
    },
    "sourceType": "module",
    "mtime": 1588812472193
  }
}