{
  "{\"sourceRoot\":\"/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo\",\"filename\":\"/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo\",\"plugins\":[],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo",
      "filename": "/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst fetch = require('node-fetch');\n\nconst app = express();\nconst port = process.env.PORT || 3000;\napp.use(express.urlencoded({\n  extended: true\n}));\napp.use(express.json());\napp.use(express.static('public'));\n\nfunction processDataForFrontEnd(req, res) {\n  const baseURL = 'https://data.princegeorgescountymd.gov/resource/wb4e-w4nf.json'; // Enter the URL for the data you would like to retrieve here\n\n  fetch(baseURL).then(r => r.json()).then(data => {\n    return data;\n  }).then(data => {\n    console.log(\"lol\", data);\n    const refined = data.map(m => ({\n      CrimeType: m.clearance_code_inc_type,\n      Latitude: m.latitude,\n      Longitude: m.longitude,\n      Date: m.date,\n      Sector: m.pgpd_sector\n    }));\n    return refined;\n  }).then(data => {\n    console.log(\"hehe\", data);\n    return data.reduce((c, current) => {\n      if (!c[current.CrimeType]) {\n        c[current.CrimeType] = [];\n      }\n\n      c[current.CrimeType].push(current);\n      return c;\n    }, {});\n  }).then(data => {\n    console.log(data);\n    res.send({\n      data: data\n    });\n  }).catch(err => {\n    console.log(err);\n    res.redirect('/error');\n  });\n} // This is our first route on our server.\n// To access it, we can use a \"GET\" request on the front end\n// by typing in: localhost:3000/api or 127.0.0.1:3000/api\n\n\napp.get('/api', (req, res) => {\n  processDataForFrontEnd(req, res);\n});\napp.listen(port, () => console.log(`Example app listening on port ${port}!`));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImZldGNoIiwiYXBwIiwicG9ydCIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwidXNlIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsInN0YXRpYyIsInByb2Nlc3NEYXRhRm9yRnJvbnRFbmQiLCJyZXEiLCJyZXMiLCJiYXNlVVJMIiwidGhlbiIsInIiLCJkYXRhIiwiY29uc29sZSIsImxvZyIsInJlZmluZWQiLCJtYXAiLCJtIiwiQ3JpbWVUeXBlIiwiY2xlYXJhbmNlX2NvZGVfaW5jX3R5cGUiLCJMYXRpdHVkZSIsImxhdGl0dWRlIiwiTG9uZ2l0dWRlIiwibG9uZ2l0dWRlIiwiRGF0ZSIsImRhdGUiLCJTZWN0b3IiLCJwZ3BkX3NlY3RvciIsInJlZHVjZSIsImMiLCJjdXJyZW50IiwicHVzaCIsInNlbmQiLCJjYXRjaCIsImVyciIsInJlZGlyZWN0IiwiZ2V0IiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLEtBQUssR0FBR0QsT0FBTyxDQUFDLFlBQUQsQ0FBckI7O0FBRUEsTUFBTUUsR0FBRyxHQUFHSCxPQUFPLEVBQW5CO0FBRUEsTUFBTUksSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQztBQUVBSixHQUFHLENBQUNLLEdBQUosQ0FBUVIsT0FBTyxDQUFDUyxVQUFSLENBQW1CO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQW5CLENBQVI7QUFDQVAsR0FBRyxDQUFDSyxHQUFKLENBQVFSLE9BQU8sQ0FBQ1csSUFBUixFQUFSO0FBRUFSLEdBQUcsQ0FBQ0ssR0FBSixDQUFRUixPQUFPLENBQUNZLE1BQVIsQ0FBZSxRQUFmLENBQVI7O0FBSUEsU0FBU0Msc0JBQVQsQ0FBZ0NDLEdBQWhDLEVBQXFDQyxHQUFyQyxFQUEwQztBQUN4QyxRQUFNQyxPQUFPLEdBQUcsZ0VBQWhCLENBRHdDLENBQzBDOztBQUVoRmQsRUFBQUEsS0FBSyxDQUFDYyxPQUFELENBQUwsQ0FDR0MsSUFESCxDQUNTQyxDQUFELElBQU9BLENBQUMsQ0FBQ1AsSUFBRixFQURmLEVBRUdNLElBRkgsQ0FFU0UsSUFBRCxJQUFVO0FBQ2QsV0FBT0EsSUFBUDtBQUNELEdBSkgsRUFNR0YsSUFOSCxDQU1TRSxJQUFELElBQVU7QUFDZEMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksS0FBWixFQUFtQkYsSUFBbkI7QUFDQSxVQUFNRyxPQUFPLEdBQUdILElBQUksQ0FBQ0ksR0FBTCxDQUFVQyxDQUFELEtBQVE7QUFDL0JDLE1BQUFBLFNBQVMsRUFBRUQsQ0FBQyxDQUFDRSx1QkFEa0I7QUFFL0JDLE1BQUFBLFFBQVEsRUFBRUgsQ0FBQyxDQUFDSSxRQUZtQjtBQUcvQkMsTUFBQUEsU0FBUyxFQUFFTCxDQUFDLENBQUNNLFNBSGtCO0FBSS9CQyxNQUFBQSxJQUFJLEVBQUVQLENBQUMsQ0FBQ1EsSUFKdUI7QUFLL0JDLE1BQUFBLE1BQU0sRUFBRVQsQ0FBQyxDQUFDVTtBQUxxQixLQUFSLENBQVQsQ0FBaEI7QUFRRSxXQUFPWixPQUFQO0FBQ0QsR0FqQkwsRUFtQktMLElBbkJMLENBbUJXRSxJQUFELElBQVU7QUFDZEMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksTUFBWixFQUFvQkYsSUFBcEI7QUFDQSxXQUFPQSxJQUFJLENBQUNnQixNQUFMLENBQVksQ0FBQ0MsQ0FBRCxFQUFJQyxPQUFKLEtBQWdCO0FBQ2pDLFVBQUksQ0FBQ0QsQ0FBQyxDQUFDQyxPQUFPLENBQUNaLFNBQVQsQ0FBTixFQUEyQjtBQUV6QlcsUUFBQUEsQ0FBQyxDQUFDQyxPQUFPLENBQUNaLFNBQVQsQ0FBRCxHQUF1QixFQUF2QjtBQUNEOztBQUNEVyxNQUFBQSxDQUFDLENBQUNDLE9BQU8sQ0FBQ1osU0FBVCxDQUFELENBQXFCYSxJQUFyQixDQUEwQkQsT0FBMUI7QUFDQSxhQUFPRCxDQUFQO0FBQ0QsS0FQTSxFQU9KLEVBUEksQ0FBUDtBQVFELEdBN0JMLEVBK0JLbkIsSUEvQkwsQ0ErQldFLElBQUQsSUFBVTtBQUNkQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWjtBQUNBSixJQUFBQSxHQUFHLENBQUN3QixJQUFKLENBQVM7QUFBRXBCLE1BQUFBLElBQUksRUFBRUE7QUFBUixLQUFUO0FBQ0QsR0FsQ0wsRUFtQ0txQixLQW5DTCxDQW1DWUMsR0FBRCxJQUFTO0FBQ2RyQixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWW9CLEdBQVo7QUFDQTFCLElBQUFBLEdBQUcsQ0FBQzJCLFFBQUosQ0FBYSxRQUFiO0FBQ0QsR0F0Q0w7QUFzREgsQyxDQUVEO0FBQ0E7QUFDQTs7O0FBQ0F2QyxHQUFHLENBQUN3QyxHQUFKLENBQVEsTUFBUixFQUFnQixDQUFDN0IsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFBQ0YsRUFBQUEsc0JBQXNCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixDQUF0QjtBQUFpQyxDQUFoRTtBQUVBWixHQUFHLENBQUN5QyxNQUFKLENBQVd4QyxJQUFYLEVBQWlCLE1BQU1nQixPQUFPLENBQUNDLEdBQVIsQ0FBYSxpQ0FBZ0NqQixJQUFLLEdBQWxELENBQXZCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9aYWNrL0RvY3VtZW50cy9HaXRIdWIvemFja2FyeXIuZ2l0aHViLmlvL3RoZWZ0LXRlc3QtcmVwby8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgZmV0Y2ggPSByZXF1aXJlKCdub2RlLWZldGNoJyk7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMDtcblxuYXBwLnVzZShleHByZXNzLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcblxuYXBwLnVzZShleHByZXNzLnN0YXRpYygncHVibGljJykpO1xuXG5cblxuZnVuY3Rpb24gcHJvY2Vzc0RhdGFGb3JGcm9udEVuZChyZXEsIHJlcykge1xuICBjb25zdCBiYXNlVVJMID0gJ2h0dHBzOi8vZGF0YS5wcmluY2VnZW9yZ2VzY291bnR5bWQuZ292L3Jlc291cmNlL3diNGUtdzRuZi5qc29uJzsgLy8gRW50ZXIgdGhlIFVSTCBmb3IgdGhlIGRhdGEgeW91IHdvdWxkIGxpa2UgdG8gcmV0cmlldmUgaGVyZVxuXG4gICAgZmV0Y2goYmFzZVVSTClcbiAgICAgIC50aGVuKChyKSA9PiByLmpzb24oKSlcbiAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgIHJldHVybiBkYXRhXG4gICAgICB9KVxuXG4gICAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhcImxvbFwiLCBkYXRhKTtcbiAgICAgICAgY29uc3QgcmVmaW5lZCA9IGRhdGEubWFwKChtKSA9PiAoe1xuICAgICAgICAgIENyaW1lVHlwZTogbS5jbGVhcmFuY2VfY29kZV9pbmNfdHlwZSxcbiAgICAgICAgICBMYXRpdHVkZTogbS5sYXRpdHVkZSxcbiAgICAgICAgICBMb25naXR1ZGU6IG0ubG9uZ2l0dWRlLFxuICAgICAgICAgIERhdGU6IG0uZGF0ZSxcbiAgICAgICAgICBTZWN0b3I6IG0ucGdwZF9zZWN0b3JcbiAgICAgICAgfSkpO1xuICAgICAgICAgXG4gICAgICAgICAgcmV0dXJuIHJlZmluZWRcbiAgICAgICAgfSlcblxuICAgICAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiaGVoZVwiLCBkYXRhKVxuICAgICAgICAgIHJldHVybiBkYXRhLnJlZHVjZSgoYywgY3VycmVudCkgPT4ge1xuICAgICAgICAgICAgaWYgKCFjW2N1cnJlbnQuQ3JpbWVUeXBlXSkge1xuXG4gICAgICAgICAgICAgIGNbY3VycmVudC5DcmltZVR5cGVdID0gW107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjW2N1cnJlbnQuQ3JpbWVUeXBlXS5wdXNoKGN1cnJlbnQpO1xuICAgICAgICAgICAgcmV0dXJuIGM7XG4gICAgICAgICAgfSwge30pO1xuICAgICAgICB9KVxuXG4gICAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgICAgICAgcmVzLnNlbmQoeyBkYXRhOiBkYXRhIH0pOyBcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgIHJlcy5yZWRpcmVjdCgnL2Vycm9yJyk7XG4gICAgICAgIH0pO1xuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxufVxuXG4vLyBUaGlzIGlzIG91ciBmaXJzdCByb3V0ZSBvbiBvdXIgc2VydmVyLlxuLy8gVG8gYWNjZXNzIGl0LCB3ZSBjYW4gdXNlIGEgXCJHRVRcIiByZXF1ZXN0IG9uIHRoZSBmcm9udCBlbmRcbi8vIGJ5IHR5cGluZyBpbjogbG9jYWxob3N0OjMwMDAvYXBpIG9yIDEyNy4wLjAuMTozMDAwL2FwaVxuYXBwLmdldCgnL2FwaScsIChyZXEsIHJlcykgPT4ge3Byb2Nlc3NEYXRhRm9yRnJvbnRFbmQocmVxLCByZXMpfSk7XG5cbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4gY29uc29sZS5sb2coYEV4YW1wbGUgYXBwIGxpc3RlbmluZyBvbiBwb3J0ICR7cG9ydH0hYCkpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "fetch",
        "app",
        "port",
        "process",
        "env",
        "PORT",
        "use",
        "urlencoded",
        "extended",
        "json",
        "static",
        "processDataForFrontEnd",
        "req",
        "res",
        "baseURL",
        "then",
        "r",
        "data",
        "console",
        "log",
        "refined",
        "map",
        "m",
        "CrimeType",
        "clearance_code_inc_type",
        "Latitude",
        "latitude",
        "Longitude",
        "longitude",
        "Date",
        "date",
        "Sector",
        "pgpd_sector",
        "reduce",
        "c",
        "current",
        "push",
        "send",
        "catch",
        "err",
        "redirect",
        "get",
        "listen"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEA,MAAME,GAAG,GAAGH,OAAO,EAAnB;AAEA,MAAMI,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEAJ,GAAG,CAACK,GAAJ,CAAQR,OAAO,CAACS,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACK,GAAJ,CAAQR,OAAO,CAACW,IAAR,EAAR;AAEAR,GAAG,CAACK,GAAJ,CAAQR,OAAO,CAACY,MAAR,CAAe,QAAf,CAAR;;AAIA,SAASC,sBAAT,CAAgCC,GAAhC,EAAqCC,GAArC,EAA0C;AACxC,QAAMC,OAAO,GAAG,gEAAhB,CADwC,CAC0C;;AAEhFd,EAAAA,KAAK,CAACc,OAAD,CAAL,CACGC,IADH,CACSC,CAAD,IAAOA,CAAC,CAACP,IAAF,EADf,EAEGM,IAFH,CAESE,IAAD,IAAU;AACd,WAAOA,IAAP;AACD,GAJH,EAMGF,IANH,CAMSE,IAAD,IAAU;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,IAAnB;AACA,UAAMG,OAAO,GAAGH,IAAI,CAACI,GAAL,CAAUC,CAAD,KAAQ;AAC/BC,MAAAA,SAAS,EAAED,CAAC,CAACE,uBADkB;AAE/BC,MAAAA,QAAQ,EAAEH,CAAC,CAACI,QAFmB;AAG/BC,MAAAA,SAAS,EAAEL,CAAC,CAACM,SAHkB;AAI/BC,MAAAA,IAAI,EAAEP,CAAC,CAACQ,IAJuB;AAK/BC,MAAAA,MAAM,EAAET,CAAC,CAACU;AALqB,KAAR,CAAT,CAAhB;AAQE,WAAOZ,OAAP;AACD,GAjBL,EAmBKL,IAnBL,CAmBWE,IAAD,IAAU;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,WAAOA,IAAI,CAACgB,MAAL,CAAY,CAACC,CAAD,EAAIC,OAAJ,KAAgB;AACjC,UAAI,CAACD,CAAC,CAACC,OAAO,CAACZ,SAAT,CAAN,EAA2B;AAEzBW,QAAAA,CAAC,CAACC,OAAO,CAACZ,SAAT,CAAD,GAAuB,EAAvB;AACD;;AACDW,MAAAA,CAAC,CAACC,OAAO,CAACZ,SAAT,CAAD,CAAqBa,IAArB,CAA0BD,OAA1B;AACA,aAAOD,CAAP;AACD,KAPM,EAOJ,EAPI,CAAP;AAQD,GA7BL,EA+BKnB,IA/BL,CA+BWE,IAAD,IAAU;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAJ,IAAAA,GAAG,CAACwB,IAAJ,CAAS;AAAEpB,MAAAA,IAAI,EAAEA;AAAR,KAAT;AACD,GAlCL,EAmCKqB,KAnCL,CAmCYC,GAAD,IAAS;AACdrB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,GAAZ;AACA1B,IAAAA,GAAG,CAAC2B,QAAJ,CAAa,QAAb;AACD,GAtCL;AAsDH,C,CAED;AACA;AACA;;;AACAvC,GAAG,CAACwC,GAAJ,CAAQ,MAAR,EAAgB,CAAC7B,GAAD,EAAMC,GAAN,KAAc;AAACF,EAAAA,sBAAsB,CAACC,GAAD,EAAMC,GAAN,CAAtB;AAAiC,CAAhE;AAEAZ,GAAG,CAACyC,MAAJ,CAAWxC,IAAX,EAAiB,MAAMgB,OAAO,CAACC,GAAR,CAAa,iCAAgCjB,IAAK,GAAlD,CAAvB",
      "sourceRoot": "/Users/Zack/Documents/GitHub/zackaryr.github.io/theft-test-repo/",
      "sourcesContent": [
        "const express = require('express');\nconst fetch = require('node-fetch');\n\nconst app = express();\n\nconst port = process.env.PORT || 3000;\n\napp.use(express.urlencoded({ extended: true }));\napp.use(express.json());\n\napp.use(express.static('public'));\n\n\n\nfunction processDataForFrontEnd(req, res) {\n  const baseURL = 'https://data.princegeorgescountymd.gov/resource/wb4e-w4nf.json'; // Enter the URL for the data you would like to retrieve here\n\n    fetch(baseURL)\n      .then((r) => r.json())\n      .then((data) => {\n        return data\n      })\n\n      .then((data) => {\n        console.log(\"lol\", data);\n        const refined = data.map((m) => ({\n          CrimeType: m.clearance_code_inc_type,\n          Latitude: m.latitude,\n          Longitude: m.longitude,\n          Date: m.date,\n          Sector: m.pgpd_sector\n        }));\n         \n          return refined\n        })\n\n        .then((data) => {\n          console.log(\"hehe\", data)\n          return data.reduce((c, current) => {\n            if (!c[current.CrimeType]) {\n\n              c[current.CrimeType] = [];\n            }\n            c[current.CrimeType].push(current);\n            return c;\n          }, {});\n        })\n\n        .then((data) => {\n          console.log(data);\n          res.send({ data: data }); \n        })\n        .catch((err) => {\n          console.log(err);\n          res.redirect('/error');\n        });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n\n// This is our first route on our server.\n// To access it, we can use a \"GET\" request on the front end\n// by typing in: localhost:3000/api or 127.0.0.1:3000/api\napp.get('/api', (req, res) => {processDataForFrontEnd(req, res)});\n\napp.listen(port, () => console.log(`Example app listening on port ${port}!`));"
      ]
    },
    "sourceType": "module",
    "mtime": 1589228759362
  }
}